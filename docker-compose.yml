version: "3"
services:
    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - "2181:2181"

    kafka:
        image: confluentinc/cp-kafka:latest
        container_name: kafka
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        ports:
            - "9092:9092"

    redis:
        image: redis:latest
        container_name: redis
        ports:
            - "6379:6379"

    postgres:
        image: postgres:latest
        container_name: postgres
        restart: always
        environment:
            POSTGRES_DB: flix # 원하는 DB 이름
            POSTGRES_USER: dydwls140 # DB 사용자명
            POSTGRES_PASSWORD: "@astems1027" # DB 비밀번호
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data # 데이터 영구 저장

volumes:
    postgres_data:
# docker-compose up
